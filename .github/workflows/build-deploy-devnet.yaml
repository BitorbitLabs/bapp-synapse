name: Deploy to dev
on:
  push:
    branches: [develop,ci_devnet]

jobs:
  docker-build:
    # Name the Job
    name: Build and push
    runs-on: build
    outputs:
      repository: ${{ steps.build.outputs.repository }}
      image_tag: ${{ steps.build.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}
          registry: ${{ secrets.REGISTRY_HOST }}
      - name: Build, tag, and push image to AWS ECR
        id: build
        env:
          REGISTRY: ${{ secrets.REGISTRY_HOST}}/velas
          REPOSITORY: velas-synapse
          IMAGE_TAG: ${{github.sha}}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --no-cache -f docker/Dockerfile .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  deploy:
    name: Deploy via Helmfile
    runs-on: deploy
    needs: docker-build-push
    steps:
      - name: Configure AWS credentials
        id: checkout
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.6.0
        with:
          helmfile-version: "v0.131.0"
      - name: Check out velas-infra
        uses: actions/checkout@master
        with:
          repository: velas/velas-infra
          ssh-key: ${{ secrets.INFRA_SSH_KEY }}
      - name: Deploy via helmfile
        id: deploy
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ needs.docker-build-push.outputs.repository }}
          IMAGE_TAG: ${{ needs.docker-build-push.outputs.image_tag }}
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_DEV }}
          NAMESPACE: devnet
        run: |
          if [ `helm plugin list|grep diff|wc -l` -eq '0' ]; then helm plugin install https://github.com/databus23/helm-diff ; fi
          if [ ${GITHUB_REF##*/} = 'master' ]; then NAMESPACE=default; fi
          mkdir -p ~/.kube && echo $KUBE_CONFIG_DATA|base64 --decode > ~/.kube/config
          cd deploy
          helmfile -e dev -l namespace=${NAMESPACE},name=velas-synapse apply  --set image.tag=$IMAGE_TAG,image.repository=$ECR_REGISTRY/$ECR_REPOSITORY --skip-deps

  deploy:
    name: Deploy via Helmfile
    runs-on: deployer
    needs: docker-build
    container:
      image: quay.io/roboll/helmfile:v0.142.0
    steps:
      - name: Configure AWS credentials
        id: checkout
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Check out velas-infra
        uses: actions/checkout@master
        with:
          repository: velas/velas-infra
          token: ${{ secrets.INFRA_PULL_TOKEN }}
      - uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA_AWS_RAW }}
          context: "eks_prod-prod"
      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.1.0
      - uses: prepor/action-aws-iam-authenticator@master
      - name: Deploy via helmfile
        id: deploy
        env:
          ECR_REPOSITORY: ${{ needs.docker-build.outputs.repository }}
          IMAGE_TAG: ${{ needs.docker-build.outputs.image_tag }}
          ECR_REGION: ${{ secrets.AWS_REGION }}
          NAMESPACE: devnet
        run: |
          exit 1
          helm plugin install https://github.com/jkroepke/helm-secrets --version v3.11.0 || true
          helm plugin install https://github.com/databus23/helm-diff || true
          cd deploy
          account_id=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .accountId)
          ECR_REGISTRY=${account_id}.dkr.ecr.${ECR_REGION}.amazonaws.com
          helmfile -e prod -l namespace=${NAMESPACE},name=velas-synapse apply  --set image.tag=$IMAGE_TAG,image.repository=$ECR_REGISTRY/$ECR_REPOSITORY --skip-deps
